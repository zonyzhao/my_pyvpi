### This is a Makefile is generated by ncsc_run. The purpose of this
### Makefile is to provide incremental compilation of test code.

### Variables for HDL Simulation
VLOG_FILES = 
VHDL_FILES = 

### Variables for Simulation
USER_NCVHDL_ARGS = -f ./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/ncvhdl.args
USER_NCVLOG_ARGS = -f ./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/ncvlog.args
USER_NCELAB_ARGS = -f ./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/ncelab.args
USER_NCSIM_ARGS = -f ./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/ncsim.args
USER_SIM_PLUSARGS = -f ./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/simplus.args
NCSC_ARGS = -f ./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/ncsc.args
USER_VSPSIM_ARGS = -f ./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/vspsim.args

RECORDING_OPTION = +tb_trans_record

### C++ files
CC_FILES = 
OBJ_CC_FILES = 
CXX_FILES = 
HH_FILES = 
OBJ_CXX_FILES = 
OBJ_HH_FILES = 
CXX_MAIN_FILE = /cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/inca/src/main.cc
CXX_MAIN_OBJ = ./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/ncsc_nc_main_object.o
EFENCE_LIBS = 
AS_FILES = 
OBJ_AS_FILES = 
OBJ_SAFE_FILES = /workspaces/dzhao/Projects/playground/pyvpi_example/test3/libvpi.so

OBJ_FILES = $(OBJ_CC_FILES) $(OBJ_CXX_FILES) $(OBJ_AS_FILES) 


OBJ_SYSC_FILES = $(OBJ_CC_SYSC_FILES) $(OBJ_CXX_SYSC_FILES) $(OBJ_AS_SYSC_FILES) $(OBJ_SAFE_SYSC_FILES)


### compile options
CC = /cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/cdsgcc/gcc/4.8/bin/gcc
CXX = ncsc -COMPILER /cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/cdsgcc/gcc/4.8/bin/g++ 
HH = ncsc -COMPILER /cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/cdsgcc/gcc/4.8/bin/g++ 
AS = ncsc
LINKER = /cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/cdsgcc/gcc/4.8/bin/g++
PURE = 
DISTCOMP =  
USER_CXX_ARGS = -I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/include \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/inca/include
USER_CXX_SYSC_ARGS = -I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/include \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/inca/include
USER_CC_ARGS = -I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/include \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/inca/include
USER_CC_SYSC_ARGS = -I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/include \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/inca/include
NCSC_CXX_ARGS = -DNCSC \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/systemc/include_pch \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/tbsc/include \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/vic/include \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/methodology/OVM/CDNS-2.1.2/sc/src \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/methodology/UVM/CDNS-1.1d/sc/sc \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/methodology/UVM/CDNS-1.1d/ml/sc \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/systemc/include/cci \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/systemc/include/factory \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/systemc/include/tlm2 \
	-fPIC \
	-c \
	-x c++  -Wall \
	-O0 -g
NCSC_CXX_SYSC_ARGS = -DNCSC \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/systemc/include_pch \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/tbsc/include \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/vic/include \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/methodology/OVM/CDNS-2.1.2/sc/src \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/methodology/UVM/CDNS-1.1d/sc/sc \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/methodology/UVM/CDNS-1.1d/ml/sc \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/systemc/include/cci \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/systemc/include/factory \
	-I/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/systemc/include/tlm2 \
	-fPIC \
	-c \
	-x c++  -Wall \
	-O0 -g
NCSC_CC_ARGS = -DNCSC \
	-fPIC \
	-c \
	-x c  -Wall \
	-g
NCSC_CC_SYSC_ARGS = -DNCSC \
	-fPIC \
	-c \
	-x c  -Wall \
	-g
CC_FLAGS = $(USER_CC_ARGS) $(NCSC_CC_ARGS)
CXX_FLAGS = $(USER_CXX_ARGS) $(NCSC_CXX_ARGS)
### linker options
USER_LD_ARGS = -L/workspaces/dzhao/anaconda3/lib -lstdc++ -lgcc_s
NCSC_LD_ARGS = -O0 -g
NCELAB_EXE = ./ncelab_sc
NCSIM_EXE = ./ncsim_sc
NCSC_NCELAB_LD_ARGS =  -lncsctlm2_sh\
           /cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/inca/lib/64bit/ncelab.o  \
           ${CXX_MAIN_OBJ}                                 \
           ${OBJ_CC_FILES}                                 \
           ${OBJ_CXX_FILES}                                \
           ${OBJ_AS_FILES}                                 \
           ${OBJ_SAFE_FILES}                               \
           ${USER_LD_ARGS}                                 \
	   -L/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/lib/64bit          \
           -L/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/systemc/lib/64bit/gnu/4.8 -Wl,-rpath,/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/lib/64bit:/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/systemc/lib/64bit/gnu/4.8:/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/methodology/UVM/CDNS-1.1d/sc/lib/64bit -lsystemc_sh -lscBootstrap_sh -lncscCoroutines_sh -lovm -lncsctlm2_sh -L/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/methodology/UVM/CDNS-1.1d/sc/lib/64bit -luvm \
           -fPIC -rdynamic                                   \
           -L/lib64 -ldl -lm -lrt -L/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/lib/64bit                                   \
           ${EFENCE_LIBS} -L/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/inca/lib/64bit -lvoids
NCSC_NCSIM_LD_ARGS =  -lncsctlm2_sh\
           /cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/inca/lib/64bit/ncsim.o    \
           ${CXX_MAIN_OBJ}                                 \
           ${OBJ_CC_FILES}                                  \
           ${OBJ_CXX_FILES}                                 \
           ${OBJ_AS_FILES}                                  \
           ${OBJ_SAFE_FILES}                                \
           ${USER_LD_ARGS}                                  \
	   -L/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/lib/64bit          \
           -L/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/systemc/lib/64bit/gnu/4.8 -Wl,-rpath,/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/lib/64bit:/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/systemc/lib/64bit/gnu/4.8:/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/methodology/UVM/CDNS-1.1d/sc/lib/64bit -lsystemc_sh -lscBootstrap_sh -lncscCoroutines_sh -lovm -lncsctlm2_sh -L/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/methodology/UVM/CDNS-1.1d/sc/lib/64bit -luvm \
           -L/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/lib/64bit -ludm   \
           -fPIC -rdynamic                                     \
           -L/lib64 -ldl -lm -lrt -L/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/lib/64bit                                          \
           ${EFENCE_LIBS} -L/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/inca/lib/64bit -lvoids
SYSC_LD_ARGS = 
LINKER_SHARED_LIB_OPT = -L/lib64 -lrt -shared -Wl,-rpath,/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/lib/64bit:/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/systemc/lib/64bit/gnu/4.8:/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/methodology/UVM/CDNS-1.1d/sc/lib/64bit

CDS_ROOT = /cad/eda/cadence/INCISIV/15.20.018/linux_i
NCELAB = ncelab
NCSIM = ncsim
VSPSIM = NCSIM
NCTESTDIR = /workspaces/dzhao/Projects/playground/pyvpi_example/test3/./sim_build/irun.lnx8664.15.20.nc
NCTESTNAME = run
SHEXT = so
STATOBJEXT = o


### SRC to Object rules with dependency

./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/ncsc_nc_main_object.o: /cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/inca/src/main.cc\
	./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/cxx_cmdline
	@echo ncsc: compiling '$$'CDSROOT/tools/inca/src/main.cc
	@$(CXX) $(NCSC_ARGS) -MANUAL -CFLAGS "-o ./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/ncsc_nc_main_object.o $(CXX_FLAGS)" \
	/cad/eda/cadence/INCISIV/15.20.018/linux_i/tools/inca/src/main.cc > ./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/ncsc_ncsc_nc_main_object.log 2>./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/ncsc_error_ncsc_nc_main_object.log

ncsc_compile: $(OBJ_FILES) $(OBJ_SAFE_FILES)
$(NCTESTDIR)/lib$(NCTESTNAME).$(SHEXT): $(OBJ_FILES) $(OBJ_SAFE_FILES) \
	./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/ld_test_cmdline
	@echo building library  $(NCTESTNAME).$(SHEXT)
	$(LINKER) $(OBJ_FILES) $(OBJ_SAFE_FILES) $(USER_LD_ARGS) \
		$(LINKER_SHARED_LIB_OPT) $(NCSC_LD_ARGS)  -o $(NCTESTDIR)/lib$(NCTESTNAME).$(SHEXT)
$(NCELAB_EXE): $(CXX_MAIN_OBJ) $(OBJ_FILES) $(OBJ_SAFE_FILES) \
	./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/ld_test_cmdline
	@echo linking executable $(NCELAB_EXE)
	@$(LINKER) $(NCSC_NCELAB_LD_ARGS) -o $(NCELAB_EXE)

$(NCSIM_EXE): $(CXX_MAIN_OBJ) $(OBJ_FILES) $(OBJ_SAFE_FILES) \
	./sim_build/irun.lnx8664.15.20.nc/ncsc_run/ncsc_obj/ld_test_cmdline
	@echo linking executable $(NCSIM_EXE)
	@$(LINKER) $(NCSC_NCSIM_LD_ARGS) -o $(NCSIM_EXE)

